{
    "swagger": "2.0",
    "info": {
        "description": "This is an API built with Go Language by team APD for SEA\n[Github Repo](http://github.com/williamchang80/sea-apd)\n",
        "version": "1.0.0",
        "title": "SEA-APD Store",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "email": "apiteam@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },
    "paths": {
        "/product": {
            "post": {
                "tags": [
                    "product"
                ],
                "summary": "Add a new product to the merchant",
                "operationId": "addProduct",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Products that already being sold the store",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Product"
                        }
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid input"
                    }
                }
            },
            "get": {
                "tags": [
                    "product"
                ],
                "summary": "Get product by ID",
                "operationId": "getProductById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/Product"
                        },
                        "description": "Successfully added"
                    },
                    "405": {
                        "description": "Invalid input"
                    }
                }
            },
            "put": {
                "tags": [
                    "product"
                ],
                "summary": "Update an existing product",
                "operationId": "updateProduct",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Edit Product that already exist in store",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Product"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success"
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Product not found"
                    },
                    "405": {
                        "description": "Validation exception"
                    }
                }
            },
            "delete": {
                "tags": [
                    "product"
                ],
                "summary": "Deletes a product",
                "operationId": "deleteProduct",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "productId",
                        "in": "query",
                        "description": "Product id to be deleted",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success"
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Product not found"
                    }
                }
            }
        },
        "/merchant/products": {
            "get": {
                "tags": [
                    "product"
                ],
                "summary": "Finds Products by merchant",
                "description": "Find Products that being sold by merchant",
                "operationId": "getProductsbyMerchant",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "merchantId",
                        "in": "query",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Product"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid"
                    }
                }
            }
        },
        "/products": {
            "get": {
                "tags": [
                    "product"
                ],
                "summary": "Get List of Products",
                "description": "The list of products in the store",
                "operationId": "getProducts",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Product"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid status value"
                    }
                }
            }
        },
        "/merchants": {
            "get": {
                "tags": [
                    "merchant"
                ],
                "summary": "Returns all merchants",
                "description": "Returns a list of merchants",
                "operationId": "getMerchants",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Merchant"
                            }
                        }
                    }
                }
            }
        },
        "/merchant": {
            "post": {
                "tags": [
                    "merchant"
                ],
                "summary": "Register merchant",
                "operationId": "registerMerchant",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "merchant details to be registered",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Merchant"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/Merchant"
                        }
                    },
                    "400": {
                        "description": "Invalid Merchant"
                    }
                }
            },
            "get": {
                "tags": [
                    "merchant"
                ],
                "summary": "Get merchant by ID",
                "operationId": "getMerchantbyId",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/Merchant"
                        }
                    },
                    "400": {
                        "description": "Invalid Merchant"
                    }
                }
            },
            "put": {
                "tags": [
                    "merchant"
                ],
                "summary": "Update merchant",
                "operationId": "updateMerchant",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "merchant details to be updated",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Merchant"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success"
                    },
                    "400": {
                        "description": "Invalid Merchant"
                    }
                }
            }
        },
        "/merchant/status": {
            "put": {
                "tags": [
                    "merchant"
                ],
                "summary": "update merchant approval status",
                "description": "Update merchant approval status",
                "operationId": "updateMerchantApprovalStatus",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "merchantId",
                        "in": "query",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "merchantStatus",
                        "in": "query",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success"
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Order not found"
                    }
                }
            }
        },
        "/user": {
            "put": {
                "tags": [
                    "user"
                ],
                "summary": "Updated user",
                "description": "This can only be done by the logged in user.",
                "operationId": "updateUser",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "oldPassword",
                        "in": "query",
                        "description": "Old Password",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "newPassword",
                        "in": "query",
                        "description": "New Password",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "oldEmail",
                        "in": "query",
                        "description": "Old Email",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "newEmail",
                        "in": "query",
                        "description": "New Email",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "userId",
                        "in": "query",
                        "description": "User ID",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200":{
                        "description": "success"
                    },
                    "400": {
                        "description": "Invalid user supplied"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "tags": [
                    "user"
                ],
                "summary": "Created user",
                "description": "Register user.",
                "operationId": "createUser",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "description": "email",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "description": "Password",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200":{
                        "description": "success"
                    },
                    "400": {
                        "description": "Invalid user supplied"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        }
    },
    "definitions": {
        "Base": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string",
                    "format": "date-time"
                },
                "updatedAt": {
                    "type": "string",
                    "format": "date-time"
                },
                "deletedAt": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "User": {
            "type": "object",
            "required": [
                "base",
                "name",
                "email",
                "hashedPassword",
                "role"
            ],
            "properties": {
                "base": {
                    "$ref": "#/definitions/Base"
                },
                "name": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "hashedPassword": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "User"
            }
        },
        "Product": {
            "type": "object",
            "required": [
                "base",
                "name",
                "description",
                "price",
                "stock",
                "merchantId"
            ],
            "properties": {
                "base": {
                    "$ref": "#/definitions/Base"
                },
                "name": {
                    "type": "string",
                    "example": "Laptop"
                },
                "description": {
                    "type": "string"
                },
                "price": {
                    "type": "integer"
                },
                "image": {
                    "type": "string"
                },
                "stock": {
                    "type": "integer"
                },
                "merchantId": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "Product"
            }
        },
        "Merchant": {
            "type": "object",
            "required": [
                "base",
                "name",
                "userId",
                "brand",
                "address",
                "approval"
            ],
            "properties": {
                "base": {
                    "$ref": "#/definitions/Base"
                },
                "name": {
                    "type": "string"
                },
                "balance": {
                    "type": "integer"
                },
                "userId": {
                    "type": "string"
                },
                "brand": {
                    "type": "string"
                },
                "address": {
                    "type": "string"
                },
                "approval": {
                    "type": "string"
                }
            }
        },
        "Payment": {
            "type": "object",
            "required": [
                "base",
                "bankName",
                "bankNumber",
                "merchant"
            ],
            "properties": {
                "base": {
                    "$ref": "#/definitions/Base"
                },
                "amount": {
                    "type": "integer"
                },
                "bankName": {
                    "type": "string"
                },
                "bankNumber": {
                    "type": "string"
                },
                "merchant": {
                    "$ref": "#/definitions/Merchant"
                },
                "merchantId": {
                    "type": "string"
                }
            }
        },
        "Transaction": {
            "type": "object",
            "required": [
                "base",
                "name",
                "userId",
                "brand",
                "address",
                "approval"
            ],
            "properties": {
                "base": {
                    "$ref": "#/definitions/Base"
                },
                "name": {
                    "type": "string"
                },
                "balance": {
                    "type": "integer"
                },
                "userId": {
                    "type": "string"
                },
                "brand": {
                    "type": "string"
                },
                "address": {
                    "type": "string"
                },
                "approval": {
                    "type": "string"
                }
            }
        }
    }
}